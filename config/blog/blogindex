#!/usr/local/bin/perl -w

use strict;
use warnings;

use File::Find;
use HTML::Entities;
use KinoSearch::Plan::Schema;
use KinoSearch::Plan::FullTextType;
use KinoSearch::Analysis::PolyAnalyzer;
use KinoSearch::Index::Indexer;

my $source_dir    = '/var/www/justatheory.blog';
my $path_to_index = '/var/www/justatheory.plugins/index';
my $base_url      = '';

# Create Schema.
my $schema = KinoSearch::Plan::Schema->new;
my $polyanalyzer = KinoSearch::Analysis::PolyAnalyzer->new(
    language => 'en',
);
my $title_type = KinoSearch::Plan::FullTextType->new(
    analyzer => $polyanalyzer,
    boost    => 3.0,
);
my $body_type = KinoSearch::Plan::FullTextType->new(
    analyzer      => $polyanalyzer,
    highlightable => 1,
);

my $tags_type = KinoSearch::Plan::FullTextType->new(
    analyzer => $polyanalyzer,
    boost    => 3.0,
);

my $url_type  = KinoSearch::Plan::StringType->new( indexed => 0, );
my $cat_type  = KinoSearch::Plan::StringType->new( stored  => 0, );
my $time_type = KinoSearch::Plan::StringType->new( indexed => 0, );

$schema->spec_field( name => 'title',     type => $title_type );
$schema->spec_field( name => 'body',      type => $body_type );
$schema->spec_field( name => 'url',       type => $url_type );
$schema->spec_field( name => 'tags',      type => $tags_type );
$schema->spec_field( name => 'category',  type => $cat_type );
$schema->spec_field( name => 'timestamp', type => $time_type );

# Create an Indexer object.
my $indexer = KinoSearch::Index::Indexer->new(
    index    => $path_to_index,
    schema   => $schema,
    create   => 1,
    truncate => 1,
);

find sub {
    return unless /[.]txt$/;
    my $file = $_;
    open my $fh, '<:encoding(utf-8)', $file or die "Couldn't open $file: $!\n";

    (my $uri = $File::Find::name) =~ s/\.txt$/.html/;
    $uri =~ s/^$source_dir\/?//;

    # The title is on the first line.
    my $title = <$fh>;
    my $tags = '';

    # Get tags from meta-keywords: line.
    while (<$fh>) {
        last unless /\S/;
        $tags = $_ if s/^meta-keywords:\s+//;
    }

    # Get the rest of the document.
    my $body = do { local $/; <$fh> };
    close $fh or die "Couldn't close $file: $!\n";

    # quick and dirty tag stripping
    $body =~ s/<[^>]+>//gsm;
    decode_entities $body;

    $indexer->add_doc({
        url       => "$base_url/$uri",
        tags      => $tags,
        title     => $title,
        body      => $body,
        category  => get_cat($uri),
        timestamp => (stat $file)[9],
    });
}, $source_dir;

# Finalize the index.
$indexer->commit;

sub get_cat {
    (my $dir = shift) =~ s{/[^/]+[.]html$}{};

    my @parts;
    for my $part ( split m{/}, $dir ) {
        my $name = ucfirst join ' ', map { s/((?:\b(?:vcs|svn|dbi|tv|cvs|html|os|rt|pda)\b)|sql)/\U$1/g; ucfirst } split /_+/, $part;
        push @parts => $name;
    }

    join ' | ', @parts;
}
