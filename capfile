
load 'lib/util.rb'

role :backup, 'theory.kineticode.com'
role :svn,    'svn.kineticode.com'
role :local,  'localhost'
role :mail,   '192.168.1.15'

namespace :apt do
  task :update do
    sudo 'apt-get update'
  end
end

namespace :build do

  namespace :ubuntu do
    task :default, :roles => :mail do
      apt::update
      sudo 'apt-get ugrade'
      sudo 'apt-get install emacs screen'
    end
  end

  namespace :sasl do
    task :default, :roles => :mail do
      apt::update
      sudo 'apt-get install libsasl2-2 libsasl2-modules sasl2-bin'
      sudo 'perl -i -pe "s/START=no/START=yes/" /etc/default/saslauthd'
      # Create sasldb by creating a test user, but not really creating it.
      sudo 'echo "foo" | sudo /usr/sbin/saslpasswd2 -c -n -p  test'
      sudo 'chown root:sasl /etc/sasldb2'
      sudo '/etc/init.d/saslauthd start'
      config
    end

    task :config, :roles => :mail do
      upload 'config/sasl_postfix.conf', '/etc/postfix/sasl/smtpd.conf', :mode => 0644
    end
  end

  namespace :postfix do
    task :default, :roles => :mail do
      build::sasl::default
      # swaks is a nice tool for testin smtp.
      sudo 'apt-get install postfix postfix-pcre swaks'
      sudo 'addgroup --gid 65533 courier'
      sudo 'adduser --disabled-login --home /nonexistent --no-create-home --quiet --shell /bin/sh --uid 65533 --gid 65533 courier'
      # Add the postfix user to the sasl group.
      sudo 'usermod -a -G sasl postfix'
      tls
      config
    end
    
    task :config, :roles => :mail do
      sudo 'mkdir -p /etc/postfix/virtual'

      upload 'config/postfix/master.cf', '/etc/postfix/master.cf', :mode => 0644
      upload 'config/postfix/main.cf', '/etc/postfix/main.cf', :mode => 0644
      upload 'config/postfix/mailbox_maps.cf', '/etc/postfix/virtual/mailbox_maps.cf', :mode => 0644
      upload 'config/postfix/header_checks.cf', '/etc/postfix/header_checks.cf', :mode => 0644
      upload 'config/postfix/body_checks.cf', '/etc/postfix/body_checks.cf', :mode => 0644

      upload '../Corporate/config/alias_maps.cf', '/etc/postfix/virtual/alias_maps.cf', :mode => 0644
      upload '../Corporate/config/aliases', '/etc/aliases', :mode => 0644

      sudo 'mkdir -p /var/mail/vhosts'
      sudo 'chown courier:courier /var/mail/vhosts'

      sudo 'postmap /etc/postfix/virtual/mailbox_maps.cf'
      sudo 'newaliases'
      sudo 'postfix reload'
    end

    task :tls, :roles => :mail do
      sudo 'mkdir -p /etc/postfix/tls'
      sudo 'openssl req -new -outform PEM -out /etc/postfix/tls/postfix.cert -newkey rsa:2048 -nodes -keyout /etc/postfix/tls/postfix.key -keyform PEM -days 1024 -x509'
      sudo 'chown -R postfix:postfix /etc/postfix/tls'
      sudo 'chmod 644 /etc/postfix/tls/postfix.cert'
      sudo 'chmod 400 /etc/postfix/tls/postfix.key'
    end

  end

  namespace :imap do
    task :default, :roles => :mail do
      apt::update
      sudo ''
    end
  end

  namespace :offlineimap do
    task :default, :roles => :backup do
      sudo_script 'bin/offlineimap.sh'
      config
    end

    task :config, :roles => :backup do
      upload 'config/offlineimap.conf', '/root/.offlineimaprc'
      %w[david julie anna].each { |who|
        sudo "mkdir -p /data/backup/imap/#{ who }"
      }
    end

  end

  namespace :svn do
    task :default, :roles => :svn do
      sudo_script 'bin/subversion.sh'
    end
  end

end

namespace :my do
  namespace :build do
    task :default, :roles => :local do
      xml
      graphics
    end

    task :gems, :roles => :local do
      sudol( 'gem install rubygems-update' )
      sudol( 'gem install capistrano' )
    end

    task :xml, :roles => :local do
      sudol_scripts( 'expat', 'libxml2', 'libxslt' )
    end

    task :graphics, :roles => :local do
      sudol_scripts( 'libpng', 'libjpeg', 'libtiff', 'giflib' )
    end

    task :uuid, :roles => :local do
      perl
      sudol_scripts( 'uuid' )
    end

    task :emacs, :roles => :local do
      graphics
      sudol_scripts( 'aspell', 'emacs' 'elisp' )
    end

    task :perl, :roles => :local do
      sudol_scripts( 'perl' )
    end

    task :cpan, :roles => :local do
      graphics
      perl
      xml
      runl "#{ BASE }/bin/cpan.sh"
    end

    task :pg, :roles => :local do
      perl
      uuid
      sudol_scripts( 'postgresql' )
    end

    task :apache, :roles => :local do
      sudol_scripts( 'mm', 'apache' )
    end

    task :modperl, :roles => :local do
      perl
      apache
      sudol_scripts( 'modperl', 'apreq' )
    end

    task :modgzip, :roles => :local do
      apache
      sudol_scripts( 'modgzip' )
    end

  end
end
